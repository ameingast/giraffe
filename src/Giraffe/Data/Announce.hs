module Giraffe.Data.Announce (
  AnnounceRequest(..),
  AnnounceResponse(..),
  AnnounceEvent(..)
) where

import Giraffe.Util.BECoding(BEEncodable, encode)
import Giraffe.Data.Peer(Peer(..))

import qualified Data.ByteString as BS(ByteString)

-- | The data type that maps http announce request.
data AnnounceRequest = AnnounceRequest {
  -- | A urlencoded 20-byte SHA1 hash of the value of the info key from the 
  -- Metainfo file. Note that the value will be a bencoded dictionary.
  announceInfoHash :: BS.ByteString,
  
  -- | A urlencoded 20-byte string used as a unique ID for the client, 
  -- generated by the client at startup. This is allowed to be any value, 
  -- and may be binary data. 
  -- There are currently no guidelines for generating this peer ID.
  announcePeerId :: BS.ByteString,
  
  -- | The port number that the client is listening on. Ports reserved for 
  -- BitTorrent are typically 6881-6889. Clients may choose to give up if it 
  -- cannot establish a port within this range.
  announcePort :: Int,
  
  -- Optional. The true IP address of the client machine, in dotted quad format 
  -- or rfc3513 defined hexed IPv6 address. 
  --
  -- Notes: In general this parameter is not necessary as the address of the
  -- client can be determined from the IP address from which the HTTP request
  -- came. The parameter is only needed in the case where the IP address that
  -- the request came in on is not the IP address of the client. 
  -- This happens if the client is communicating to the tracker through a 
  -- proxy (or a transparent web proxy/cache.) It also is necessary when both
  -- the client and the tracker are on the same local side of a NAT gateway. 
  -- The reason for this is that otherwise the tracker would give out the 
  -- internal (RFC1918) address of the client, which is not routable. 
  -- Therefore the client must explicitly state its (external, routable) 
  -- IP address to be given out to external peers. Various trackers treat this
  -- parameter differently. Some only honor it only if the IP address that the
  -- request came in on is in RFC1918 space. Others honor it unconditionally, 
  -- while others ignore it completely. In case of IPv6 address 
  -- (e.g.: 2001:db8:1:2::100) it indicates only that client can communicate 
  -- via IPv6.
  announceIp :: Maybe String,
  
  -- | The total amount uploaded (since the client sent the 'started' 
  -- event to the tracker) in base ten ASCII. While not explicitly stated 
  -- in the official specification, the concensus is that this should be the 
  -- total number of bytes uploaded.  
  announceUploaded :: Integer,
  
  -- | The total amount downloaded (since the client sent the 'started' 
  -- event to the tracker) in base ten ASCII. While not explicitly stated 
  -- in the official specification, the consensus is that this should be the 
  -- total number of bytes downloaded.
  announceDownloaded :: Integer,
  
  -- | The number of bytes this client still has to download in base ten ASCII.
  announceLeft :: Integer,
  
  -- | If specified, must be one of started, completed, stopped, 
  -- (or empty which is the same as not being specified). If not specified, 
  -- then this request is one performed at regular intervals.
  announceEvent :: Maybe AnnounceEvent,
  
  -- | Optional. Number of peers that the client would like to receive from 
  -- the tracker. This value is permitted to be zero. If omitted, 
  -- typically defaults to 50 peers.
  announceNumWant :: Maybe Integer,
  
  -- | Indicates that the tracker can omit peer id field in announce-list 
  -- dictionary. This option is ignored if compact is enabled.
  announceNoPeerId :: Bool,
  
  -- | Setting this to 1 indicates that the client accepts a compact response. 
  -- The announce-list is replaced by a peers string with 6 bytes per peer. 
  -- The first four bytes are the host (in network byte order), the last two 
  -- bytes are the port (again in network byte order). It should be noted that 
  -- some trackers only support compact responses (for saving bandwidth) and 
  -- either refuse requests without "compact=1" or simply send a compact 
  -- response unless the request contains "compact=0" (in which case they will 
  -- refuse the request).
  announceCompact :: Bool,
  
  -- | Optional. An additional client identification mechanism that is not 
  -- shared with any peers. It is intended to allow a client to prove their 
  -- identity should their IP address change.
  announceKey :: Maybe String
}

-- | The data type that maps announce responses created from 
-- 'AnnounceRequest's.
data AnnounceResponse = AnnounceResponse {
  -- | Interval in seconds that the client should wait between sending regular 
  -- requests to the tracker.
  announceInterval :: Int,
  
  -- | Optional. Minimum announce interval. If present clients must not 
  -- reannounce more frequently than this.
  announceMinimumInterval :: Maybe Int,
  
  -- | A list of peer dictionaries. See 'Peer'.
  announcePeers :: [Peer],
    
  -- | Optional. then no other keys may be present. The value is a 
  -- human-readable error message as to why the request failed (string).
  announceFailureReason :: Maybe String,
  
  -- | Optional. Similar to failure reason, but the response still gets 
  -- processed normally. The warning message is shown just like an error.
  announceWarningMessage :: Maybe String,
  
  -- | A string that the client should send back on its next announcements. 
  announceTrackerId :: String,
  
  -- | Number of peers with the entire file, i.e. seeders.
  announceComplete :: Integer,
  
  -- | Number of non-seeder peers, aka leechers.
  announceIncomplete :: Integer
}

instance BEEncodable AnnounceResponse where
  encode (AnnounceResponse _ _ _ _ _ _ _ _) = undefined
  
data AnnounceEvent =
  -- | The first request to the tracker must include the event key with this value.
  AnnounceStarted | 

  -- | Must be sent to the tracker when the download completes. 
  -- However, must not be sent if the download was already 100% complete when
  -- the client started. Presumably, this is to allow the tracker to increment
  -- the "completed downloads" metric based solely on this event.
  AnnounceCompleted |

  -- | Must be sent to the tracker if the client is shutting down gracefully. 
  AnnounceStopped deriving (Show, Eq)